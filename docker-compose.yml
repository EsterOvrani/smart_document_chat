version: '3.3'
services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: smartdocumentchat
      POSTGRES_USER: smartdoc_user
      POSTGRES_PASSWORD: smartdoc_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smartdoc_user -d smartdocumentchat"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-security-backend
    env_file:
      - ./backend/.env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/smartdocumentchat
      SPRING_DATASOURCE_USERNAME: smartdoc_user
      SPRING_DATASOURCE_PASSWORD: smartdoc_password
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: spring-security-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: spring-security-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: